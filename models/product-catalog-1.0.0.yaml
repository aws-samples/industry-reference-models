---
openapi: 3.1.0
info:
  title: ProductService
  version: '2024-01-01'
paths:
  "/categories":
    get:
      description: Lists all categories.
      operationId: ListCategories
      parameters:
        - name: nextToken
          in: query
          description: Specifies the beginning of the next page of results.
          schema:
            type: string
            description: Specifies the beginning of the next page of results.
        - name: pageSize
          in: query
          description: The maximum number of results to return at once.
          schema:
            type: number
            description: The maximum number of results to return at once.
        - name: nameFilter
          in: query
          description: Filters categories by name.
          schema:
            type: string
            description: Filters categories by name.
      responses:
        '200':
          description: ListCategories 200 response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListCategoriesResponseContent"
    post:
      description: Creates a new category.
      operationId: CreateCategory
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateCategoryRequestContent"
      responses:
        '201':
          description: CreateCategory 201 response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CreateCategoryResponseContent"
  "/categories/{categoryId}":
    delete:
      description: Deletes a category.
      operationId: DeleteCategory
      parameters:
        - name: categoryId
          in: path
          description: The unique identifier for the category being requested.
          schema:
            type: string
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
            description: The unique identifier for the category being requested.
          required: true
      responses:
        '204':
          description: DeleteCategory 204 response
    get:
      description: Retrieves details for a specific category.
      operationId: GetCategory
      parameters:
        - name: categoryId
          in: path
          description: The unique identifier for the category being requested.
          schema:
            type: string
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
            description: The unique identifier for the category being requested.
          required: true
      responses:
        '200':
          description: GetCategory 200 response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetCategoryResponseContent"
    patch:
      description: Updates an existing category.
      operationId: UpdateCategory
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateCategoryRequestContent"
      parameters:
        - name: categoryId
          in: path
          description: The unique identifier for the category being requested.
          schema:
            type: string
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
            description: The unique identifier for the category being requested.
          required: true
      responses:
        '200':
          description: UpdateCategory 200 response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UpdateCategoryResponseContent"
  "/products":
    get:
      description: Lists the available products in the catalog.
      operationId: ListProducts
      parameters:
        - name: nextToken
          in: query
          description: Specifies the beginning of the next page of results.
          schema:
            type: string
            description: Specifies the beginning of the next page of results.
        - name: pageSize
          in: query
          description: The maximum number of results to return at once.
          schema:
            type: number
            description: The maximum number of results to return at once.
        - name: nameFilter
          in: query
          description: Filters products by name.
          schema:
            type: string
            description: Filters products by name.
        - name: categoryFilter
          in: query
          description: Filters products by category.
          schema:
            type: string
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
            description: Filters products by category.
      responses:
        '200':
          description: ListProducts 200 response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListProductsResponseContent"
    post:
      description: Creates a new product in the catalog.
      operationId: CreateProduct
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateProductRequestContent"
      responses:
        '201':
          description: CreateProduct 201 response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CreateProductResponseContent"
  "/products/{productId}":
    delete:
      description: Deletes a product from the catalog.
      operationId: DeleteProduct
      parameters:
        - name: productId
          in: path
          description: The unique identifier for the product being requested. This ID
            should be provided by the client making the API request.
          schema:
            type: string
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
            description: The unique identifier for the product being requested. This
              ID should be provided by the client making the API request.
          required: true
      responses:
        '204':
          description: DeleteProduct 204 response
    get:
      description: Retrieves details for a specific product in the catalog.
      operationId: GetProduct
      parameters:
        - name: productId
          in: path
          description: The unique identifier for the product being requested. This ID
            should be provided by the client making the API request.
          schema:
            type: string
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
            description: The unique identifier for the product being requested. This
              ID should be provided by the client making the API request.
          required: true
      responses:
        '200':
          description: GetProduct 200 response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetProductResponseContent"
    patch:
      description: Updates an existing product in the catalog.
      operationId: UpdateProduct
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateProductRequestContent"
      parameters:
        - name: productId
          in: path
          description: The unique identifier for the product being requested. This ID
            should be provided by the client making the API request.
          schema:
            type: string
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
            description: The unique identifier for the product being requested. This
              ID should be provided by the client making the API request.
          required: true
      responses:
        '200':
          description: UpdateProduct 200 response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UpdateProductResponseContent"
  "/products/{productId}/variants":
    get:
      description: Lists all variants for a specific product.
      operationId: ListProductVariants
      parameters:
        - name: productId
          in: path
          description: The unique identifier for the product being requested. This ID
            should be provided by the client making the API request.
          schema:
            type: string
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
            description: The unique identifier for the product being requested. This
              ID should be provided by the client making the API request.
          required: true
        - name: nextToken
          in: query
          description: Specifies the beginning of the next page of results.
          schema:
            type: string
            description: Specifies the beginning of the next page of results.
        - name: pageSize
          in: query
          description: The maximum number of results to return at once.
          schema:
            type: number
            description: The maximum number of results to return at once.
      responses:
        '200':
          description: ListProductVariants 200 response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListProductVariantsResponseContent"
    post:
      description: Creates a new product variant for a specific product.
      operationId: CreateProductVariant
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateProductVariantRequestContent"
      parameters:
        - name: productId
          in: path
          description: The unique identifier for the product for which a variant is
            being created. This ID should be provided by the client making the API request.
          schema:
            type: string
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
            description: The unique identifier for the product for which a variant is
              being created. This ID should be provided by the client making the API
              request.
          required: true
      responses:
        '201':
          description: CreateProductVariant 201 response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CreateProductVariantResponseContent"
  "/products/{productId}/variants/{variantId}":
    delete:
      description: Deletes a product variant.
      operationId: DeleteProductVariant
      parameters:
        - name: productId
          in: path
          description: The unique identifier for the product for which a variant is
            being deleted. This ID should be provided by the client making the API request.
          schema:
            type: string
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
            description: The unique identifier for the product for which a variant is
              being deleted. This ID should be provided by the client making the API
              request.
          required: true
        - name: variantId
          in: path
          description: The unique identifier for the product variant being deleted.
            This ID should be provided by the client making the API request.
          schema:
            type: string
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
            description: The unique identifier for the product variant being deleted.
              This ID should be provided by the client making the API request.
          required: true
      responses:
        '204':
          description: DeleteProductVariant 204 response
    get:
      description: Retrieves details for a specific product variant.
      operationId: GetProductVariant
      parameters:
        - name: productId
          in: path
          description: The unique identifier for the product for which a variant is
            being requested. This ID should be provided by the client making the API
            request.
          schema:
            type: string
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
            description: The unique identifier for the product for which a variant is
              being requested. This ID should be provided by the client making the API
              request.
          required: true
        - name: variantId
          in: path
          description: The unique identifier for the product variant being requested.
            This ID should be provided by the client making the API request.
          schema:
            type: string
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
            description: The unique identifier for the product variant being requested.
              This ID should be provided by the client making the API request.
          required: true
      responses:
        '200':
          description: GetProductVariant 200 response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetProductVariantResponseContent"
    patch:
      description: Updates an existing product variant.
      operationId: UpdateProductVariant
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateProductVariantRequestContent"
      parameters:
        - name: productId
          in: path
          description: The unique identifier for the product for which a variant is
            being updated. This ID should be provided by the client making the API request.
          schema:
            type: string
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
            description: The unique identifier for the product for which a variant is
              being updated. This ID should be provided by the client making the API
              request.
          required: true
        - name: variantId
          in: path
          description: The unique identifier for the product variant being updated.
            This ID should be provided by the client making the API request.
          schema:
            type: string
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
            description: The unique identifier for the product variant being updated.
              This ID should be provided by the client making the API request.
          required: true
      responses:
        '200':
          description: UpdateProductVariant 200 response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UpdateProductVariantResponseContent"
components:
  schemas:
    Attribute:
      type: object
      additionalProperties:
        type: string
        description: The value property is a string that contains the actual value
          of the attribute. For the 'color' key, this might be 'red', 'blue', etc.
      propertyNames:
        type: string
        description: The key property is a string that represents a unique identifier
          or name for the attribute. This could be something like 'color', 'size',
          etc.
      description: The attribute map allows you to define key-value attribute pairs
        to represent properties of the product.
    CategorySummary:
      type: object
      description: This object contains details for a category.
      properties:
        categoryId:
          type: string
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
          description: The unique identifier for the category being requested.
        name:
          type: string
          description: The name of the category.
    CreateCategoryRequestContent:
      type: object
      description: This is the input for the CreateCategory operation.
      properties:
        name:
          type: string
          description: The name of the category.
        description:
          type: string
          description: A description of the category.
        parentId:
          type: string
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
          description: The parentId for the category, if one exists.
    CreateCategoryResponseContent:
      type: object
      properties:
        name:
          type: string
          description: The name of the category.
        description:
          type: string
          description: A description of the category.
        parentId:
          type: string
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
          description: The parentId for the category, if one exists.
        created:
          type: number
          description: An ISO-8601 formatted datetime string representing when the
            category was added.
          format: double
        modified:
          type: number
          description: An ISO-8601 formatted datetime string representing when the
            category was last modified.
          format: double
    CreateProductRequestContent:
      type: object
      description: The input for the CreateProduct operation.
      properties:
        sku:
          type: string
          description: The stock keeping unit (SKU) identifier for the product.
        name:
          type: string
          description: The display name of the product. This should be a human-readable
            string that can be shown to users to identify the product.
        description:
          type: string
          description: A detailed description of the product.
        brand:
          type: string
          description: The brand name of the product.
        price:
          type: number
          description: The price of the product. This should be a numeric value representing
            the cost to purchase the product.
        currency:
          type: string
          description: The currency that the price is expressed in. This should be
            a 3-letter currency code like USD or EUR.
        categories:
          type: array
          items:
            type: string
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
            description: The unique identifier for the category. This should be a
              string that can be used to lookup the category in a database or other
              data storage.
          description: The list of categories the product belongs to.
        attributes:
          type: array
          items:
            "$ref": "#/components/schemas/Attribute"
          description: A list of attribute names to values for the product.
        imageUrls:
          type: array
          items:
            "$ref": "#/components/schemas/ImageUrl"
          description: A list of image URLs for the product.
    CreateProductResponseContent:
      type: object
      description: The output for the CreateProduct operation.
      properties:
        sku:
          type: string
          description: The stock keeping unit (SKU) identifier for the product.
        name:
          type: string
          description: The name of the product.
        description:
          type: string
          description: The description of the product.
        brand:
          type: string
          description: The brand name of the product.
        price:
          type: number
          description: The price of the product.
        currency:
          type: string
          description: The currency code for the price, e.g. USD, EUR.
        categories:
          type: array
          items:
            type: string
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
            description: The unique identifier for the category. This should be a
              string that can be used to lookup the category in a database or other
              data storage.
          description: The list of categories the product belongs to.
        attributes:
          type: array
          items:
            "$ref": "#/components/schemas/Attribute"
          description: A list of attribute names to values for the product.
        imageUrls:
          type: array
          items:
            "$ref": "#/components/schemas/ImageUrl"
          description: A list of image URLs for the product.
        created:
          type: number
          description: An ISO-8601 formatted datetime string representing when the
            product was added.
          format: double
        modified:
          type: number
          description: An ISO-8601 formatted datetime string representing when the
            product was last modified.
          format: double
    CreateProductVariantRequestContent:
      type: object
      description: This is the input for the CreateProductVariant operation.
      properties:
        name:
          type: string
          description: The display name of this product variant.
        description:
          type: string
          description: The description of the product variant.
        sku:
          type: string
          description: The brand name of the product variant.
        price:
          type: number
          description: The price of the product variant.
          format: double
        currency:
          type: string
          description: The currency code for the price, e.g. USD, EUR.
        attributes:
          type: array
          items:
            "$ref": "#/components/schemas/Attribute"
          description: A list of attribute names to values for the product variant.
        imageUrls:
          type: array
          items:
            "$ref": "#/components/schemas/ImageUrl"
          description: A list of image URLs for the product variant.
    CreateProductVariantResponseContent:
      type: object
      description: This is the output for the CreateProductVariant operation.
      properties:
        name:
          type: string
          description: The display name of this product variant.
        description:
          type: string
          description: The description of the product variant.
        sku:
          type: string
          description: The brand name of the product variant.
        price:
          type: number
          description: The price of the product variant.
          format: double
        currency:
          type: string
          description: The currency code for the price, e.g. USD, EUR.
        attributes:
          type: array
          items:
            "$ref": "#/components/schemas/Attribute"
          description: A list of attribute names to values for the product variant.
        imageUrls:
          type: array
          items:
            "$ref": "#/components/schemas/ImageUrl"
          description: A list of image URLs for the product variant.
        created:
          type: number
          description: An ISO-8601 formatted datetime string representing when the
            product variant was added.
          format: double
        modified:
          type: number
          description: An ISO-8601 formatted datetime string representing when the
            product variant was last modified.
          format: double
    GetCategoryResponseContent:
      type: object
      description: This is the output for the GetCategory operation.
      properties:
        name:
          type: string
          description: The name of the category.
        description:
          type: string
          description: A description of the category.
        parentId:
          type: string
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
          description: The parentId for the category, if one exists.
        created:
          type: number
          description: An ISO-8601 formatted datetime string representing when the
            category was added.
          format: double
        modified:
          type: number
          description: An ISO-8601 formatted datetime string representing when the
            category was last modified.
          format: double
    GetProductResponseContent:
      type: object
      description: The output for the GetProduct operation.
      properties:
        name:
          type: string
          description: The name of the product.
        description:
          type: string
          description: A detailed description of the product.
        brand:
          type: string
          description: The brand name of the product.
        price:
          type: number
          description: The numeric price of the product without currency.
        currency:
          type: string
          description: A 3-letter currency code like USD representing the price currency.
        categories:
          type: array
          items:
            type: string
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
            description: The unique identifier for the category. This should be a
              string that can be used to lookup the category in a database or other
              data storage.
          description: A list of categorieIds representing product categories.
        attributes:
          type: array
          items:
            "$ref": "#/components/schemas/Attribute"
          description: A list of attribute names to values for the product.
        imageUrls:
          type: array
          items:
            "$ref": "#/components/schemas/ImageUrl"
          description: A list of image URLs for the product.
        created:
          type: number
          description: An ISO-8601 formatted datetime string representing when the
            product was added.
          format: double
        modified:
          type: number
          description: An ISO-8601 formatted datetime string representing when the
            product was last modified.
          format: double
    GetProductVariantResponseContent:
      type: object
      description: This is the output of the GetProductVariant operation.
      properties:
        name:
          type: string
          description: The display name of this product variant.
        description:
          type: string
          description: The description of the product variant.
        sku:
          type: string
          description: The brand name of the product variant.
        price:
          type: number
          description: The price of the product variant.
          format: double
        currency:
          type: string
          description: The currency code for the price, e.g. USD, EUR.
        attributes:
          type: array
          items:
            "$ref": "#/components/schemas/Attribute"
          description: A list of attribute names to values for the product variant.
        imageUrls:
          type: array
          items:
            "$ref": "#/components/schemas/ImageUrl"
          description: A list of image URLs for the product variant.
        created:
          type: number
          description: An ISO-8601 formatted datetime string representing when the
            product variant was added.
          format: double
        modified:
          type: number
          description: An ISO-8601 formatted datetime string representing when the
            product variant was last modified.
          format: double
    ImageUrl:
      type: object
      additionalProperties:
        type: string
        description: The value is a string containing the URL of the image. This should
          be a fully qualified URL pointing to the image location.
      propertyNames:
        type: string
        description: The key is a string that identifies the image. This could be
          something like 'main', 'thumbnail', etc.
      description: This is an Image URL map for a product.
    ListCategoriesResponseContent:
      type: object
      description: This is the output for the ListCategories operation.
      properties:
        categories:
          type: array
          items:
            "$ref": "#/components/schemas/CategorySummary"
          description: A list of category summaries.
        nextToken:
          type: string
          description: Token to retrieve the next set of categories, if more categories
            are available.
        totalCount:
          type: number
          description: The total number of categories available, if known.
    ListProductVariantsResponseContent:
      type: object
      description: This is the output for the ListProductVariants operation.
      properties:
        productVariants:
          type: array
          items:
            "$ref": "#/components/schemas/ProductVariantSummary"
          description: A list of product variant summaries.
        nextToken:
          type: string
          description: Token to retrieve the next set of product variants, if more
            product variants are available.
        totalCount:
          type: number
          description: The total number of product variants available, if known.
    ListProductsResponseContent:
      type: object
      description: The output from the ListProducts operation.
      properties:
        products:
          type: array
          items:
            "$ref": "#/components/schemas/ProductSummary"
          description: A list of product summaries.
        nextToken:
          type: string
          description: Token to retrieve the next set of products, if more products
            are available.
        totalCount:
          type: number
          description: The total number of products available, if known.
    ProductSummary:
      type: object
      description: This object contains details for a product.
      properties:
        productId:
          type: string
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
          description: The unique identifier for the product. This should be a string
            that can be used to lookup the product in a database or other data storage.
        name:
          type: string
          description: The display name of the product.
        price:
          type: number
          description: The price of the product. This should be a numeric value representing
            the cost to purchase the product.
        currency:
          type: string
          description: The currency that the price is expressed in. This should be
            a 3-letter currency code like USD or EUR.
    ProductVariantSummary:
      type: object
      description: This object contains details for a product variant.
      properties:
        productId:
          type: string
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
          description: The unique ID of the product this variant belongs to.
        variantId:
          type: string
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
          description: The unique ID of this product variant.
        name:
          type: string
          description: The display name of this product variant.
        sku:
          type: string
          description: The stock-keeping unit (SKU) code for this product variant.
        price:
          type: number
          description: The price of this product variant. This should be a numeric
            value representing the cost to purchase the product variant.
          format: double
        currency:
          type: string
          description: The currency that the price of the product variant is expressed
            in. This should be a 3-letter currency code like USD or EUR.
    UpdateCategoryRequestContent:
      type: object
      description: This is the input for the UpdateCategory operation.
      properties:
        name:
          type: string
          description: The name of the category.
        description:
          type: string
          description: A description of the category.
        parentId:
          type: string
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
          description: The parentId for the category, if one exists.
    UpdateCategoryResponseContent:
      type: object
      description: This is the output for the UpdateCategory operation.
      properties:
        name:
          type: string
          description: The name of the category.
        description:
          type: string
          description: A description of the category.
        parentId:
          type: string
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
          description: The parentId for the category, if one exists.
        created:
          type: number
          description: An ISO-8601 formatted datetime string representing when the
            category was added.
          format: double
        modified:
          type: number
          description: An ISO-8601 formatted datetime string representing when the
            category was last modified.
          format: double
    UpdateProductRequestContent:
      type: object
      properties:
        name:
          type: string
          description: The name of the product.
        description:
          type: string
          description: The description of the product.
        brand:
          type: string
          description: The brand name of the product.
        price:
          type: number
          description: The price of the product.
        currency:
          type: string
          description: The currency code for the price, e.g. USD, EUR.
        categories:
          type: array
          items:
            type: string
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
            description: The unique identifier for the category. This should be a
              string that can be used to lookup the category in a database or other
              data storage.
          description: The list of categories the product belongs to.
        attributes:
          type: array
          items:
            "$ref": "#/components/schemas/Attribute"
          description: A list of attribute names to values for the product.
        imageUrls:
          type: array
          items:
            "$ref": "#/components/schemas/ImageUrl"
          description: A list of image URLs for the product.
    UpdateProductResponseContent:
      type: object
      properties:
        name:
          type: string
          description: The name of the product.
        description:
          type: string
          description: The description of the product.
        brand:
          type: string
          description: The brand name of the product.
        price:
          type: number
          description: The price of the product.
        currency:
          type: string
          description: The currency code for the price, e.g. USD, EUR.
        categories:
          type: array
          items:
            type: string
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
            description: The unique identifier for the category. This should be a
              string that can be used to lookup the category in a database or other
              data storage.
          description: The list of categories the product belongs to.
        attributes:
          type: array
          items:
            "$ref": "#/components/schemas/Attribute"
          description: A list of attribute names to values for the product.
        imageUrls:
          type: array
          items:
            "$ref": "#/components/schemas/ImageUrl"
          description: A list of image URLs for the product.
        created:
          type: number
          description: An ISO-8601 formatted datetime string representing when the
            product was added.
          format: double
        modified:
          type: number
          description: An ISO-8601 formatted datetime string representing when the
            product was last modified.
          format: double
    UpdateProductVariantRequestContent:
      type: object
      description: This is the input for the UpdateProductVariant operation.
      properties:
        name:
          type: string
          description: The display name of the product variant.
        description:
          type: string
          description: The description of the product variant.
        sku:
          type: string
          description: The brand name of the product variant.
        price:
          type: number
          description: The price of the product variant.
          format: double
        currency:
          type: string
          description: The currency code for the price, e.g. USD, EUR.
        attributes:
          type: array
          items:
            "$ref": "#/components/schemas/Attribute"
          description: A list of attribute names to values for the product variant.
        imageUrls:
          type: array
          items:
            "$ref": "#/components/schemas/ImageUrl"
          description: A list of image URLs for the product variant.
    UpdateProductVariantResponseContent:
      type: object
      description: This is the output for the UpdateProductVariant operation.
      properties:
        name:
          type: string
          description: The display name of this product variant.
        description:
          type: string
          description: The description of the product variant.
        sku:
          type: string
          description: The brand name of the product variant.
        price:
          type: number
          description: The price of the product variant.
          format: double
        currency:
          type: string
          description: The currency code for the price, e.g. USD, EUR.
        attributes:
          type: array
          items:
            "$ref": "#/components/schemas/Attribute"
          description: A list of attribute names to values for the product variant.
        imageUrls:
          type: array
          items:
            "$ref": "#/components/schemas/ImageUrl"
          description: A list of image URLs for the product variant.
        created:
          type: number
          description: An ISO-8601 formatted datetime string representing when the
            product variant was added.
          format: double
        modified:
          type: number
          description: An ISO-8601 formatted datetime string representing when the
            product variant was last modified.
          format: double
