openapi: 3.0.3
info:
  title: Order Service API
  version: "2024-01-01"
  description: "Order Service API for managing orders and related operations."

paths:
  /orders:
    get:
      summary: "Retrieves a list of orders."
      operationId: getOrders
      parameters:
        - name: nextToken
          in: query
          description: "Specifies the beginning of the next page of results."
          schema:
            type: string
        - name: pageSize
          in: query
          description: "The maximum number of results to return at once."
          schema:
            type: integer
        - name: customerFilter
          in: query
          description: "Filters orders by customer ID."
          schema:
            type: string
        - name: keywordFilter
          in: query
          description: "Filter orders by keyword."
          schema:
            type: string
        - name: timeFilter
          in: query
          description: "Filter orders by time period. Valid values are 'last30', 'last90', or a year value, such as 'year-2022'."
          schema:
            type: string
        - name: orderStatusFilter
          in: query
          description: "Filters orders by order status."
          schema:
            type: string
            enum:
              - PRE_ORDER
              - PENDING
              - PROCESSING
              - CONFIRMED
              - SHIPPED
              - DELIVERED
              - PARTIALLY_SHIPPED
              - CANCELLED
              - ON_HOLD
              - BACKORDERED
              - COMPLETED
      responses:
        '200':
          description: "A list of order summaries."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrdersResponse'

    post:
      summary: "Creates a new order."
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        '201':
          description: "The created order."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrderResponse'

  /orders/{orderNumber}:
    get:
      summary: "Retrieves details for a specific order."
      operationId: getOrder
      parameters:
        - name: orderNumber
          in: path
          required: true
          description: "The unique identifier for the order."
          schema:
            type: string
            pattern: '^[A-Za-z0-9]+$'
      responses:
        '200':
          description: "The retrieved order details."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderResponse'

    put:
      summary: "Updates an existing order."
      operationId: updateOrder
      parameters:
        - name: orderNumber
          in: path
          required: true
          description: "The unique identifier for the order."
          schema:
            type: string
            pattern: '^[A-Za-z0-9]+$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderRequest'
      responses:
        '200':
          description: "The updated order."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrderResponse'

    delete:
      summary: "Deletes an order."
      operationId: deleteOrder
      parameters:
        - name: orderNumber
          in: path
          required: true
          description: "The unique identifier for the order."
          schema:
            type: string
            pattern: '^[A-Za-z0-9]+$'
      responses:
        '204':
          description: "The order was deleted."

components:
  schemas:
    
    OrderStatus:
      type: string
      enum:
        - PRE_ORDER
        - PENDING
        - PROCESSING
        - CONFIRMED
        - SHIPPED
        - DELIVERED
        - PARTIALLY_SHIPPED
        - CANCELLED
        - ON_HOLD
        - BACKORDERED
        - COMPLETED

    PaymentStatus:
      type: string
      enum:
        - PENDING
        - AUTHORIZED
        - CAPTURED
        - INVOICE
        - PARTIALLY_CAPTURED
        - FAILED
        - REFUNDED
        - VOIDED
        - EXPIRED
        - PENDING_REVIEW
        - CANCELLED

    FulfillmentStatus:
      type: string
      enum:
        - PRE_ORDER
        - PENDING
        - PROCESSING
        - PICK_UP_IN_STORE
        - SHIPPED
        - DELIVERED
        - PARTIALLY_SHIPPED
        - IN_TRANSIT
        - OUT_FOR_DELIVERY
        - ATTEMPTED_DELIVERY
        - HELD_IN_TRANSIT
        - RETURNED_TO_SENDER
        - LOST_IN_TRANSIT
        - RETURNED
        - REFUNDED
        - COMPLETED
        - CANCELLED
        - ON_HOLD
        - BACKORDERED

    RefundStatus:
      type: string
      enum:
        - REQUESTED
        - PENDING_APPROVAL
        - APPROVED
        - PROCESSING
        - COMPLETED
        - REJECTED
        - CANCELLED
        - PARTIALLY_REFUNDED
        - REFUND_FAILED

    ReturnStatus:
      type: string
      enum:
        - REQUESTED
        - PENDING_APPROVAL
        - APPROVED
        - PROCESSING
        - COMPLETED
        - REJECTED
        - CANCELLED
        - PARTIALLY_RETURNED
        - REFUND_FAILED

    ReturnMethod:
      type: string
      enum:
        - IN_STORE_RETURN
        - MAIL_RETURN
        - CURBSIDE_RETURN
        - LOCKER
        - DROP_OFF_LOCATION



    CreateOrderRequest:
      type: object
      properties:
        storeId:
          type: string
        cartId:
          type: string
          pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
        items:
          $ref: '#/components/schemas/OrderItems'
        customerId:
          type: string
        customer:
          $ref: '#/components/schemas/CustomerSummary'
        substituteItems:
          $ref: '#/components/schemas/SubstituteItems'
        restrictions:
          type: string
        fulfillment:
          $ref: '#/components/schemas/FulfillmentSummary'
        payment:
          $ref: '#/components/schemas/PaymentTransactions'
        billing:
          $ref: '#/components/schemas/BillingSummary'
        orderNotes:
          type: string

    CreateOrderResponse:
      type: object
      properties:
        orderNumber:
          type: string
          pattern: ^[A-Za-z0-9]+$
        storeId:
          type: string
        cartId:
          type: string
          pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
        items:
          $ref: '#/components/schemas/OrderItems'
        customerId:
          type: string
        customer:
          $ref: '#/components/schemas/CustomerSummary'
        OrderStatus:
          $ref: '#/components/schemas/OrderStatus'
        created:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
        payment:
          $ref: '#/components/schemas/PaymentTransactions'
        billing:
          $ref: '#/components/schemas/BillingSummary'
        fulfillment:
          $ref: '#/components/schemas/FulfillmentSummary'
        fulfillmentGroups:
          $ref: '#/components/schemas/FulfillmentGroups'
        orderNotes:
          type: string

    GetOrdersResponse:
      type: object
      properties:
        orders: 
          $ref: '#/components/schemas/Orders'
        nextToken:
          type: string
        totalCount: 
          type: integer

    GetOrderResponse:
      type: object
      properties:
        orderNumber:
          type: string
        storeId:
          type: string
        cartId:
          type: string
        items:
          $ref: '#/components/schemas/OrderItems'
        substituteItems:
          $ref: '#/components/schemas/SubstituteItems'
        customerId:
          type: string
        customer:
          $ref: '#/components/schemas/CustomerSummary'
        orderStatus:
          $ref: '#/components/schemas/OrderStatus'
        restrictions:
          type: string
        created:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
        payment:
          $ref: '#/components/schemas/PaymentTransactions'
        billing:
          $ref: '#/components/schemas/BillingSummary'
        fulfillment:
          $ref: '#/components/schemas/FulfillmentSummary'
        fulfillmentGroups:
          $ref: '#/components/schemas/FulfillmentGroups'
        refund:
          $ref: '#/components/schemas/RefundSummary'
        return:
          $ref: '#/components/schemas/ReturnSummary'
        orderNotes:
          type: string
        orderHistory: 
          $ref: '#/components/schemas/OrderHistoryList'

    UpdateOrderRequest:
      type: object
      properties:
        orderNumber:
          type: string
        storeId:
          type: string
        items:
          $ref: '#/components/schemas/OrderItems'
        substituteItems:
          $ref: '#/components/schemas/SubstituteItems'
        customer:
          $ref: '#/components/schemas/CustomerSummary'
        orderStatus:
          $ref: '#/components/schemas/OrderStatus'
        restrictions:
          type: string
        modified:
          type: string
          format: date-time
        payment:
          $ref: '#/components/schemas/PaymentTransactions'
        billing:
          $ref: '#/components/schemas/BillingSummary'
        fulfillment:
          $ref: '#/components/schemas/FulfillmentSummary'
        fulfillmentGroups:
          $ref: '#/components/schemas/FulfillmentGroups'
        refund:
          $ref: '#/components/schemas/RefundSummary'
        return:
          $ref: '#/components/schemas/ReturnSummary'
        orderNotes:
          type: string
        orderHistory: 
          $ref: '#/components/schemas/OrderHistoryList'

    UpdateOrderResponse:
      type: object
      properties:
        orderNumber:
          type: string
        storeId:
          type: string
        cartId:
          type: string
        items:
          $ref: '#/components/schemas/OrderItems'
        substituteItems:
          $ref: '#/components/schemas/SubstituteItems'
        customerId:
          type: string
        customer:
          $ref: '#/components/schemas/CustomerSummary'
        orderStatus:
          $ref: '#/components/schemas/OrderStatus'
        restrictions:
          type: string
        created:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
        payment:
          $ref: '#/components/schemas/PaymentTransactions'
        billing:
          $ref: '#/components/schemas/BillingSummary'
        fulfillment:
          $ref: '#/components/schemas/FulfillmentSummary'
        fulfillmentGroups:
          $ref: '#/components/schemas/FulfillmentGroups'
        refund:
          $ref: '#/components/schemas/RefundSummary'
        return:
          $ref: '#/components/schemas/ReturnSummary'
        orderNotes:
          type: string
        orderHistory: 
          $ref: '#/components/schemas/OrderHistoryList'
          

    
    Orders:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderSummary'

    OrderSummary:
      type: object
      properties:
        orderNumber:
          type: string
        storeId:
          type: string
        cartId:
          type: string
        items:
          $ref: '#/components/schemas/OrderItems'
        substituteItems:
          $ref: '#/components/schemas/SubstituteItems'
        customerId:
          type: string
        customer:
          $ref: '#/components/schemas/CustomerSummary'
        orderStatus:
          $ref: '#/components/schemas/OrderStatus'
        restrictions:
          type: string
        created:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
        payment:
          $ref: '#/components/schemas/PaymentTransactions'
        billing:
          $ref: '#/components/schemas/BillingSummary'
        fulfillment:
          $ref: '#/components/schemas/FulfillmentSummary'
        fulfillmentGroups:
          $ref: '#/components/schemas/FulfillmentGroups'
        refund:
          $ref: '#/components/schemas/RefundSummary'
        return:
          $ref: '#/components/schemas/ReturnSummary'
        orderNotes:
          type: string

    OrderHistoryList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderSummary'


    OrderItems:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ItemSummary'

    ItemSummary:
      type: object
      properties:
        productId:
          type: string
        sku:
          type: string
        name:
          type: string
        shortDescription:
          type: string
        brand:
          type: string
        category:
          $ref: '#/components/schemas/CategoryList'
        quantity:
          type: integer
        weight:
          type: integer
        weightUnit:
          type: string
        unitPrice:
          type: integer
        currency:
          type: string
        promotions: 
          $ref: '#/components/schemas/PromotionsList'
        discounts: 
          $ref: '#/components/schemas/DiscountList'
        attributes: 
          $ref: '#/components/schemas/AttributeList'
        return: 
          $ref: '#/components/schemas/ReturnSummary'
        refund: 
          $ref: '#/components/schemas/RefundSummary'


    CategoryList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CategorySummary'

    CategorySummary:
      type: object
      properties:
        categoryId:
          type: string
        name:
          type: string


    PromotionsList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/PromotionSummary'

    PromotionSummary:
      type: object
      properties:
        promotionId:
          type: string
        name:
          type: string
        description:
          type: string


    DiscountList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/DiscountSummary'

    DiscountSummary:
      type: object
      properties:
        discountId:
          type: string
        name:
          type: string
        description:
          type: string
        amount:
          type: integer


    AttributeList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AttributeItem'

    AttributeItem:
      type: object
      properties:
        key:
          type: string
        value:
          type: string


    ReturnSummary:
      type: object
      properties:
        returnCode:
          type: string
        returnStatus:
            $ref: '#/components/schemas/ReturnStatus'
        returnMethod:
             $ref: '#/components/schemas/ReturnMethod'
        returnReason:
          type: string
        returnDate:
          type: string
          format: date-time
        notes:
          type: string

    RefundSummary:
      type: object
      properties:
        refundCode:
          type: string
        refundStatus: 
             $ref: '#/components/schemas/RefundStatus'
        refundedAmount:
          type: integer
        currency:
          type: string
        refundMethod:
          type: string
        refundDate:
          type: string
          format: date-time
        notes:
          type: string


    CustomerSummary:
      type: object
      properties:
        customerId: 
          type: string
        firstName: 
          type: string
        lastName: 
          type: string
        email: 
          type: string
        countryCode: 
          type: string
        billingAddress: 
          $ref: '#/components/schemas/Address'
        shippingAddress: 
          $ref: '#/components/schemas/Address'

    Address:
      type: object
      properties:
        street:
          description: "The street line of the address."
          type: string
        city:
          description: "The city of the address."
          type: string
        state:
          description: "The state or province of the address."
          type: string
        zipCode:
          description: "The postal or zip code of the address."
          type: string
        country:
          description: "The country of the address."
          type: string


    SubstituteItems:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SubstitutionItem'

    SubstitutionItem:
      type: object
      properties:
        productId:
          type: string
        sku:
          type: string
        name:
          type: string
        shortDescription:
          type: string
        brand:
          type: string
        category: 
          $ref: '#/components/schemas/CategoryList'
        quantity:
          type: integer
        weight:
          type: integer
        weightUnit:
          type: string
        unitPrice:
          type: integer
        currency:
          type: string
        promotions: 
          $ref: '#/components/schemas/PromotionsList'
        discounts: 
          $ref: '#/components/schemas/DiscountList'
        attributes: 
          $ref: '#/components/schemas/AttributeList'
        itemToSubstitute: 
          $ref: '#/components/schemas/ItemSummary'
        return: 
          $ref: '#/components/schemas/ReturnSummary'
        refund: 
          $ref: '#/components/schemas/RefundSummary'


    FulfillmentSummary:
      type: object
      properties:
        fulfillmentStatus: 
          $ref: '#/components/schemas/FulfillmentStatus'
        estimatedDeliveryDate:
          type: string
          format: date-time
        shippingRate:
          type: integer
        currency:
          type: string
        trackingNumber:
          type: string
        carrier:
          type: string
        shippingMethod:
          type: string
        shippingAddress:
          $ref: '#/components/schemas/Address'
        shippedDate: 
          type: string
          format: date-time
        deliverDate: 
          type: string
          format: date-time
        notes:
          type: string

    FulfillmentGroups:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentGroup'

    FulfillmentGroup:
      type: object
      description: "Fulfillment groups can be used for multi-part fulfillment."
      properties:
        groupId:  
          type: string
        items: 
          $ref: '#/components/schemas/OrderItems'
        fulfillment: 
          $ref: '#/components/schemas/FulfillmentSummary'
        payment: 
          $ref: '#/components/schemas/PaymentSummary'
        notes:  
          type: string


    PaymentTransactions:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/PaymentSummary'

    PaymentSummary:
      type: object
      properties:
        paymentMethod: 
          type: string
        totalAmount:
          type: integer
        currency: 
          type: string
        transactionId: 
          type: string
        auhtorizationCode: 
          type: string
        paymentStatus: 
          $ref: '#/components/schemas/PaymentStatus'


    BillingSummary:
      type: object
      properties:
        subtotal:
          type: integer
        taxes: 
          $ref: '#/components/schemas/TaxSummary'
        promotions: 
          $ref: '#/components/schemas/PromotionsList'
        discounts: 
          $ref: '#/components/schemas/DiscountList'
        shippingAmount:
          type: integer
        fees: 
          $ref: '#/components/schemas/FeeList'
        totalAmount:
          type: integer
        currency: 
          type: string


    TaxSummary:
      type: object
      properties:
        taxableAmount: 
          type: integer
        taxAmount: 
          type: integer
        taxes: 
          $ref: '#/components/schemas/TaxList'
        totalAmount: 
          type: integer
        currency: 
          type: string

    TaxList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/TaxItem'

    TaxItem:
      type: object
      properties:
        taxName: 
            type: string
        taxAmount: 
            type: integer
        currency: 
            type: string
        taxRate: 
            type: integer


    FeeList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/FeeItem'

    FeeItem:
      type: object
      properties:
        key: 
            type: string
        value: 
            type: integer
